{% extends 'base.html.twig' %}

{% block title %}Sgr: Eventos{% endblock %}

{% block body %}
    <h1>Eventos</h1>
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label }}" role="alert">
                {{ message }}
            </div>
        {% endfor %}
    {% endfor %}
    
    <!-- Collapse buttons by filters -->
    <p>
        <a class="btn btn-info" data-toggle="collapse" href="#Filtros" aria-expanded="false" aria-controls="Filtros">
           <i class="far fa-eye"></i> Ver filtros
        </a>
    </p>
    <!-- / Collapse buttons -->

    <!-- Collapsible element -->
    <div class="collapse" id="Filtros">
        <div class="mt-3 mb-3">
            {{ include('sgr_evento/_formFilters.html.twig', {'button_label': 'Filtrar eventos'}) }}
        </div>
    </div>
    <!-- / Collapsible element -->    
    

    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>Id</th>
                <th>Titulo</th>
                <!--<th>Estado</th>-->
                <th>F_inicio</th>
                <th>F_fin</th>
                <th>Todos los</th>
                <th>Desde</th>
                <th>Hasta</th>
                <th>Recurso</th>
                <!--<th>CreatedAt</th>-->
                <!--<th>UpdatedAt</th>-->
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
        {% for sgr_evento in pagination %}
            <tr>
                <td>{{ sgr_evento.id }}</td>
                <td>{{ sgr_evento.titulo }}</td>
                <!--<td>{{ sgr_evento.estado }}</td>-->
                <td>{{ sgr_evento.fInicio ? sgr_evento.fInicio|date('Y-m-d') : '' }}</td>
                <td>{{ sgr_evento.fFin ? sgr_evento.fFin|date('Y-m-d') : '' }}</td>
                <td>{{ sgr_evento.getDiasStringFormat|join(', ',' y ')}} </td>
                <td>{{ sgr_evento.hInicio ? sgr_evento.hInicio|date('H:i:s') : '' }}</td>
                <td>{{ sgr_evento.hFin ? sgr_evento.hFin|date('H:i:s') : '' }}</td>
                <!--<td>{{ sgr_evento.createdAt ? sgr_evento.createdAt|date('Y-m-d H:i:s') : '' }}</td>-->
                <!--<td>{{ sgr_evento.updatedAt ? sgr_evento.updatedAt|date('Y-m-d H:i:s') : '' }}</td>-->
                <td>{{ sgr_evento.espacio }}</td>
                <td>
                    <a class="btn btn-secondary m-1" type="button" href="{{ path('sgr_evento_show', {'id': sgr_evento.id}) }}"> Ver </a>
                    <a class="btn btn-primary m-1" type="button" href="{{ path('sgr_evento_edit', {'id': sgr_evento.id}) }}"> Editar </a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="11">No se encontraron eventos...</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <div>
        Total de eventos: {{ pagination.getTotalItemCount }}    
    </div>
    <div>
    {{ knp_pagination_render(pagination) }}
    </div>


    <a class="btn btn-primary" type="button" href="{{ path('sgr_evento_new') }}">Nuevo evento</a>
{% endblock %}
{% block morescripts %}
<script type="text/javascript">
        
        var $titulacion = $('#sgr_filters_sgr_eventos_titulacion');
        var $curso = $('#sgr_filters_sgr_eventos_curso');
        
        $( '#sgr_filters_sgr_eventos_titulacion, #sgr_filters_sgr_eventos_curso' ).change(function() {
            // ... retrieve the corresponding form.
            var $form = $(this).closest('form');
            // Simulate form data, but only include the selected titulacion value.
            var data = {};
            data[$titulacion.attr('name')] = $titulacion.val();
            data[$curso.attr('name')] = $curso.val();        
            // Submit data via AJAX to the form's action path.
            $.ajax({
                url : '/admin/sgr/evento/index/ajax-getAsignaturas',
                type: 'GET',//$form.attr('method'),
                data : data,
                success: function(html) {
                    //console.log(html.profesores.content);
                    //console.log(html.asignaturas.content);
                    $('#sgr_filters_sgr_eventos_asignatura').html(html.asignaturas.content).fadeOut().fadeIn();
                    $('#sgr_filters_sgr_eventos_profesor').html(html.profesores.content).fadeOut().fadeIn();

                },
                error: function(xhr, ajaxOptions, thrownError){
                    alert(xhr.responseText + ' (codeError: ' + xhr.status  +')');
                }
            });
        });

        var $asignatura = $('#sgr_filters_sgr_eventos_asignatura');
        
        $asignatura.change(function(){

            // ... retrieve the corresponding form.
            var $form = $(this).closest('form');
            // Simulate form data, but only include the selected titulacion value.
            var data = {};
            data[$asignatura.attr('name')] = $asignatura.val();

           // Submit data via AJAX to the form's action path.
            $.ajax({
                url : '/admin/sgr/evento/index/ajax-getProfesores',
                type: 'GET',//$form.attr('method'),
                data : data,
                success: function(html) {
                    console.log(html.profesores.content);
                    //console.log(html.asignaturas.content);
                    $('#sgr_filters_sgr_eventos_profesor').html(html.profesores.content).fadeOut().fadeIn();

                },
                error: function(xhr, ajaxOptions, thrownError){
                    alert(xhr.responseText + ' (codeError: ' + xhr.status  +')');
                }
            }); 
        });      
</script>
{% endblock %}